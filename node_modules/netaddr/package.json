{
  "name": "netaddr",
  "version": "1.0.0",
  "description": "Utility for IP addresses and CIDR expressions",
  "main": "index.js",
  "scripts": {
    "test": "mocha"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/d11wtq/netip.git"
  },
  "keywords": [
    "ip",
    "ipv4",
    "cidr",
    "subnet"
  ],
  "author": {
    "name": "d11wtq"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/d11wtq/netip/issues"
  },
  "homepage": "https://github.com/d11wtq/netip",
  "devDependencies": {
    "mocha": "^2.2.5"
  },
  "readme": "# netaddr.js\n\nNode.js utility package for working with IP addresses and CIDR ranges.\n\n## Installation\n\n```\n$ npm install netaddr --save\n```\n\n## Usage\n\n``` javascript\nvar Addr = require('netaddr').Addr;\n\n// Create a fixed IP address from a string\nvar localhost = Addr('127.0.0.1');\n\n// Create  CIDR range from a string\nvar subnet = Addr('10.0.0.0/16');\n\n// Create a CIDR range from an integer and prefix\nvar subnet = Addr(167772160, 16);\n\n// Convert an IP address to an integer\nvar intval = Addr('127.0.0.1').toInt();\n\n// Get the network address\nvar network = subnet.network();\n\n// Get the broadcast address\nvar broadcast = subnet.broadcast();\n\n// Check if one CIDR contains another CIDR or IP\nsubnet.contains(Addr('10.0.3.0/24')); // true\n\n// Check where two CIDRs intersect\nsubnet.intersect(Addr('10.0.3.0/24'));\n\n// Increment an address (non-mutating)\nlocalhost.increment();\n\n// Decrement an address (non-mutating)\nlocalhost.decrement();\n```\n\nAttempts to create an invalid `Addr` will throw an `Error`.\n\n## Limitations\n\nCurrently only IPv4 is supported, though there are plans to add IPv6 support.\nThis is complicated by the fact JavaScript does not support 64-bit integers,\nlet alone 128-bit integers.\n\n## Copyright & License\n\nCopyright Â© 2015 Chris Corbyn. See the LICENSE file for details.\n",
  "readmeFilename": "README.md",
  "gitHead": "46d3914c37be11596b7ba636cac896b099308b88",
  "_id": "netaddr@1.0.0",
  "_shasum": "e118061a399b748953c56c8d96cec6c13f6457f8",
  "_from": "netaddr@*"
}
